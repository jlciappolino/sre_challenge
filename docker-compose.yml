version: "2.1"

services:
  mockdata:
    build: ./mockdata
    entrypoint: "go run main.go"
    depends_on:
      - redis

  client:
    build: ./client

  currency_conversions:
    build: ./currency_conversions
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://currency_conversions:8080/check/currency_conversions/ping" ]
      interval: 100ms
      timeout: 1s
      retries: 5

  items:
    build: ./items
    depends_on:
      - redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://items:8080/check/items/ping" ]
      interval: 100ms
      timeout: 1s
      retries: 5

  sold_items:
    build: ./sold_items
    depends_on:
      - redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://sold_items:8080/check/sold_items/ping" ]
      interval: 100ms
      timeout: 1s
      retries: 5

  users:
    build: ./users
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://users:8080/check/users/ping"]
      interval: 100ms
      timeout: 1s
      retries: 5

  ngnix:
    build: ./nginx/
    ports:
      - 8080:80
    volumes: 
      - ./nginx/html:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      items:
        condition: service_healthy
      sold_items:
        condition: service_healthy
      users:
        condition: service_healthy
      currency_conversions:
        condition: service_healthy

  redis:
    image: "redis:alpine"
    command: ["redis-server", "--bind", "redis", "--port", "6379" ]